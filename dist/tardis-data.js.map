{"version":3,"sources":["api_base.js","api_v1.js","tardis-data.js"],"names":[],"mappings":"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","file":"tardis-data.js","sourcesContent":["class ParameterSet {\n    constructor(id, name, namespace, isHidden) {\n        this.id = id;\n        this.name = name;\n        this.namespace = namespace;\n        this.isHidden = isHidden;\n        this.parameters = [];\n    }\n\n    addParameter(parameter) {\n        if (!(parameter instanceof Parameter)) {\n            throw new TypeError(\"parameter must be an instance of Parameter\");\n        }\n        parameter._setParent(this);\n        this.parameters.push(parameter);\n    }\n\n    getParameters() {\n        this.parameters.sort(function(a, b) {\n            var x = a.order?parseInt(a.order):9999;\n            var y = b.order?parseInt(b.order):9999;\n            return x - y;\n        });\n        return this.parameters;\n    }\n}\n\nclass Parameter {\n    constructor(id, name, fullName, value, units, order, isImmutable, isSearchable) {\n        this.parent = null;\n        this.id = id;\n        this.name = name;\n        this.fullName = fullName;\n        this.value = value;\n        this.units = units;\n        this.order = order;\n        this.isImmutable = isImmutable;\n        this.isSearchable = isSearchable;\n    }\n\n    _setParent(parent) {\n        if (!(parent instanceof ParameterSet)) {\n            throw new TypeError(\"Parent must be a ParameterSet\");\n        }\n        this.parent = parent;\n    }\n}\n\nclass ApiBase {\n    constructor($injector, baseUrl, baseUri, restangularConfig) {\n        var restangular = $injector.get(\"Restangular\");\n        this.baseUrl = baseUrl;\n        this.baseUri = baseUri;\n        if (!restangularConfig) {\n            this.restangular = restangular;\n        } else {\n            this.restangular = restangular.withConfig(restangularConfig);\n        }\n    }\n\n    _getListFromUrl(url, endpointName, params) {\n        params = params || {};\n        return this.restangular.allUrl(endpointName, url).getList(params);\n    }\n\n    _getList(endpoint, params) {\n        params = params || {};\n        return this.restangular.all(endpoint).getList(params);\n    }\n}","class ApiV1 extends ApiBase {\n\n    constructor($injector, baseUrl, baseUri) {\n        super($injector, baseUrl, baseUri, function (RestangularConfigurer) {\n            RestangularConfigurer.setBaseUrl(baseUrl + baseUri);\n            RestangularConfigurer.addResponseInterceptor(function (data, operation, what, url, response) {\n                var newResponse;\n                if (operation === 'getList') {\n                    newResponse = data.objects;\n                    newResponse.meta = data.meta;\n                } else {\n                    newResponse = response.data;\n                }\n                return newResponse;\n            });\n            RestangularConfigurer.setRequestSuffix('/');\n        });\n    }\n\n    getList(endpoint, params) {\n        /**\n         * Generic method to get a list of API object and add pagination methods to navigate the result\n         * getPreviousPage() / getNextPage() will be undefined if no previous/next pages exist\n         */\n        var self = this;\n        return this._getList(endpoint, params).then(\n            function (list) {\n                if (list.meta.next !== null) {\n                    list.getNextPage = function () {\n                        return self._getListFromUrl(self.baseUrl + list.meta.next, list.route);\n                    };\n                }\n                if (list.meta.previous !== null) {\n                    list.getPreviousPage = function () {\n                        return self._getListFromUrl(self.baseUrl + list.meta.previous, list.route);\n                    };\n                }\n                return list;\n            }\n        )\n    }\n\n    getExperiments(params) {\n        /**\n         * Returns a list of experiments\n         * params is an object of query string parameters\n         */\n        return this.getList('experiment', params);\n    }\n\n    getExperiment(id) {\n        /**\n         * Returns a single experiment by id\n         */\n        return this.restangular.one('experiment', id).get();\n    }\n\n    getDatasets(params) {\n        /**\n         * Returns a list of datasets\n         * params is either on object of query string parameters or an experiment object\n         */\n        var parameters = {};\n        if (params.hasOwnProperty('id')) {\n            parameters['experiments__id'] = params.id;\n        } else if (typeof params === 'number') {\n            parameters['experiments__id'] = params;\n        } else {\n            parameters = params;\n        }\n        return this.getList('dataset', parameters);\n    }\n\n    getDataset(id) {\n        /**\n         * Returns a single dataset by id\n         */\n        return this.restangular.one('dataset', id).get();\n    }\n\n    getDatafiles(params) {\n        /**\n         * Returns a list of datafiles\n         * params is either on object of query string parameters or an experiment object\n         */\n        var parameters = {};\n        if (params.hasOwnProperty('id')) {\n            parameters['dataset__id'] = params.id;\n        } else if (typeof params === 'number') {\n            parameters['dataset__id'] = params;\n        } else {\n            parameters = params;\n        }\n        return this.getList('dataset_file', parameters);\n    }\n\n    getDatafile(id) {\n        /**\n         * Returns a single datafile object by id\n         */\n        return this.restangular.one('dataset_file', id).get();\n    }\n\n    getParameterSets(object) {\n        /**\n         * Returns all parameter sets associated with an experiment/dataset/datafile\n         */\n        if (!object.hasOwnProperty('parameter_sets')) {\n            throw new TypeError('Object must have a \\'parameter_sets\\' property');\n        }\n\n        var self = this;\n\n        function fetchParameterDetails(param, psObj) {\n            return self.restangular.oneUrl('parametername', self.baseUrl + param.name).get()\n                .then(function (paramName) {\n                    // value is determined in order of preference, from left to right:\n                    var value = param.numerical_value || param.datetime_value || param.string_value || param.value || param.link_id;\n                    return {\n                        id: param.id,\n                        name: paramName.name,\n                        fullName: paramName.full_name,\n                        value: value,\n                        units: paramName.units,\n                        order: paramName.order,\n                        isImmutable: paramName.immutable,\n                        isSearchable: paramName.is_searchable\n                    };\n                })\n                .then(function (p) {\n                    psObj.addParameter(new Parameter(p.id, p.name, p.fullName, p.value, p.units, p.order, p.isImmutable, p.isSearchable));\n                });\n        }\n\n        var result = [];\n        var promise;\n\n        var parameterSets = object.parameter_sets;\n        for (var i in parameterSets) {\n            if (parameterSets.hasOwnProperty(i)) {\n                var ps = parameterSets[i];\n                var psObj = new ParameterSet(ps.id, ps.schema.name, ps.schema.namespace, ps.schema.hidden);\n                var parameters = ps.parameters;\n                for (var j in parameters) {\n                    if (parameters.hasOwnProperty(j)) {\n                        var param = parameters[j];\n                        if (!promise) {\n                            promise = fetchParameterDetails(param, psObj);\n                        } else {\n                            (function (param, psObj) {\n                                promise = promise.then(function () {\n                                    fetchParameterDetails(param, psObj)\n                                });\n                            })(param, psObj);\n                        }\n                    }\n                }\n                result.push(psObj);\n            }\n        }\n\n        return promise.then(function () {\n            return result\n        });\n    }\n}","var app = angular.module('tardis-data', ['restangular']);\napp.provider('tardisData', tardisDataProvider);\n\nclass UnsupportedApiVersionError extends Error {\n    constructor(version) {\n        super('Unsupported API version requested: '+version);\n    }\n}\n\nfunction tardisDataProvider() {\n\n    var apiVersion = 1;\n    var apiBaseUrl = '';\n    var apiBaseUri = '/api/v1/';\n\n    function setApiVersion(version) {\n        apiVersion = version;\n    }\n\n    /**\n     * Configuration option to set the base URL\n     * e.g. \"https://example.com\"\n     * @param baseUrl\n     */\n    function setApiBaseUrl(baseUrl) {\n        apiBaseUrl = baseUrl;\n    }\n\n    /**\n     * Configuration option to set the base URI\n     * e.g. \"/api/v1/\"\n     * @param baseUri\n     */\n    function setApiBaseUri(baseUri) {\n        apiBaseUri = baseUri;\n    }\n\n    /** @ngInject */\n    function tardisDataProviderFactory($injector) {\n        switch (apiVersion) {\n            case 1:\n                return new ApiV1($injector, apiBaseUrl, apiBaseUri);\n            default:\n                throw new UnsupportedApiVersionError(apiVersion);\n        }\n    }\n\n    return {\n        setApiVersion: setApiVersion,\n        setApiBaseUrl: setApiBaseUrl,\n        setApiBaseUri: setApiBaseUri,\n        $get: tardisDataProviderFactory\n    };\n}"],"sourceRoot":"/source/"}